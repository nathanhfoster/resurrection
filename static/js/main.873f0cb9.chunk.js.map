{"version":3,"sources":["../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/object-assign/index.js","../../node_modules/react-is/cjs/react-is.development.js","../../node_modules/react-is/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/factoryWithTypeCheckers.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../src/utils/actionTypes.js","../../src/utils/bindActionCreators.js","../../src/utils/isFunction.js","../../src/utils/defaultInitializer.js","../../src/utils/getDerivedStateFromProps.js","../../src/utils/getRandomInt.js","../../src/utils/defaultReducer.js","../../src/utils/shallowEquals.js","../../src/hooks/useLazyMemo.js","../../src/hooks/useReducerWithThunk.js","../../src/provider.js","../../src/utils/combineReducers.js","../../src/connect.js","../../src/hooks/usePreviousValue.js","SomeProviderChild.js","App.js","index.js"],"names":["b","Symbol","for","c","d","e","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","type","A","getOwnPropertySymbols","module","require$$0","Object","prototype","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","checkPropTypes","typeSpecs","values","location","componentName","getStack","resetWarningCache","Function","call","bind","emptyFunction","emptyFunctionWithReset","shim","props","propName","propFullName","secret","ReactPropTypesSecret","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","PropTypes","require$$2","randomString","Math","BindActionCreators","mapDispatchToProps","dispatch","key","action","acc","args","actionCreator","bindActionCreator","isFunction","stateOrProps","min","max","getDerivedStateFromProps","state","defaultReducer","prevState","shallowEquals","aKeys","bKeys","useLazyMemo","initializer","ref","useRef","observer","newObserver","getObservable","setStateHookReducer","store","isReady","getState","StateProvider","createContext","ContextStore","Context","context","reducers","initialState","children","getInitialMainState","useCallback","globalReducerFunction","hasStateChanged","updatedStateByReducers","reducerKey","currentStateByKey","returnedStateByReducer","currentReducer","combinedStateAndReducers","reducer","combineReducers","mainState","defaultInitializer","getInitialHookState","initialHookState","useReducer","hookState","setHookState","setState","nextState","newState","reduce","useEffect","useReducerWithThunk","useLayoutEffect","contextStore","useMemo","warnedAboutMissingDevToolRef","window","value","React","mapStateToProps","mergeProps","options","usePreviousValue","prevValue","connect","someKeyFromMyStore","pure","areStatePropsEqual","areMergedPropsEqual","MemoizedComponent","memo","Component","useContext","stateToProps","dispatchToProps","bindActionCreators","prevMergeProps","handleMergeProps","getMergedProps","merge","stateProps","dispatchProps","nextMergedProps","mergedProps","ownProps","DEFAULT_STATE","someReducer","payload","SomeProvider","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.873f0cb9.chunk.js","sourcesContent":["/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\n\nconst randomString = () =>\n  Math.random().toString(36).substring(7).split('').join('.')\n\nconst ActionTypes = {\n  INIT: `@@redux/INIT${randomString()}`,\n  REPLACE: `@@redux/REPLACE${randomString()}`,\n  PROBE_UNKNOWN_ACTION: () => `@@redux/PROBE_UNKNOWN_ACTION${randomString()}`\n}\n\nexport default ActionTypes\n","/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Thunk} dispatch - the dispatch function available from the useReducerWithThunk hook\n\n * @returns {Action|ThunkActionDispatch} - An actionCreator object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @returns {Action} - the action callback function\n *\n * @returns {ThunkActionDispatch} - The object mimicking\n * the original object, but with\n * every action creator wrapped into the dispatch call. If you passed a\n * function as actionCreators, the return value will also be a single\n * function.\n */\nconst bindActionCreator = (dispatch) => (actionCreator) => (...args) =>\n  dispatch(actionCreator?.apply?.(this, args) || actionCreator)\n\n/**\n * This augments actions to dispatch other actions and passes (dispatch, getState)\n * @param {Object} mapDispatchToProps - actions to be passed as props\n * @param {Thunk} dispatch - reducer dispatch API\n * @returns {Object.<String, Thunk>} object of augmented actions\n * */\n\nconst BindActionCreators = (mapDispatchToProps, dispatch) => {\n  if (typeof mapDispatchToProps !== 'object' || mapDispatchToProps === null) {\n    throw new Error(\n      `bindActionCreators expected an object or a function, instead received ${\n        mapDispatchToProps === null ? 'null' : typeof mapDispatchToProps\n      }.`\n    )\n  }\n  const boundActionCreators = Object.entries(mapDispatchToProps).reduce(\n    (acc, [key, action]) => {\n      acc[key] = bindActionCreator(dispatch)(action)\n      return acc\n    },\n    {}\n  )\n\n  return boundActionCreators\n}\n\nexport default BindActionCreators\n","/**\n * This evaluates wheter an object is a function or not\n * @param {*} object - any object\n * @returns {Boolean} - if the obejct is a boolean\n * */\n\nconst isFunction = (object) =>\n  object instanceof Function || typeof object === 'function'\n\nexport default isFunction\n","/**\n * @param {ReducerState|ComponentProps} stateOrProps - reducer state\n * @returns {ReducerState} - reducer state\n */\n\nexport default (stateOrProps) => stateOrProps\n","/**\n * This function allows the state to be controlled by an HOC by overwritting it with props\n * @param {ReducerState} state - state object\n * @param {ComponentProps|Object=} props - props to make the state controlled from an HOC\n * @returns {ReducerState} - the new merged state\n */\n\nconst getDerivedStateFromProps = (state, props) => ({\n  ...(state && {\n    ...state\n  }),\n  ...(props && {\n    ...props\n  })\n})\n\nexport default getDerivedStateFromProps\n","/**\n * This functions returns a random integer within a specified range\n * @param {Number} min - the lower limit of the integer\n * @param {Number} max - the upper limit of the integer\n * @returns {Number} - random integer\n */\n\nconst getRandomInt = (min, max) =>\n  Math.floor(Math.random() * (max - min + 1)) + min\n\nexport default getRandomInt\n","import getDerivedStateFromProps from './getDerivedStateFromProps'\n/**\n * Mimics React.Component this.setState\n * @param {ReducerState} state - current reducer state\n * @param {ReducerState} action - the state keys to overwrite\n * @returns {ReducerState} - the next state for the reducer\n */\nconst defaultReducer = (prevState, action) =>\n  getDerivedStateFromProps(prevState, action)\n\nexport default defaultReducer\n","/**\n * This function does a shallow comparison on two objects\n * @param {Object} a - first object to compare\n * @param {Object} b - second object to compare\n * @returns {Boolean} - whether the two objects are equal or not\n * */\n\nconst shallowEquals = (a, b) => {\n  if (a === b) return true\n  if (!(a || b)) return true\n\n  const aKeys = Object.keys(a)\n  for (let i = 0; i < aKeys.length; i++) {\n    const key = aKeys[i]\n    if (!(key in b) || a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  const bKeys = Object.keys(b)\n  for (let i = 0; i < bKeys.length; i++) {\n    const key = bKeys[i]\n    if (!(key in a) || a[key] !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport default shallowEquals\n","import { useRef } from 'react'\n\nconst DEFAULT_VALUE = null\n\n/**\n * This function is used to overcome this potential issue of the useMemo:\n * You may rely on useMemo as a performance optimization, not as a semantic guarantee.\n * In the future, React may choose to “forget” some previously memoized values\n * and recalculate them on next render, e.g. to free memory for offscreen components.\n * Write your code so that it still works without useMemo — and then add it to optimize performance.\n * (For rare cases when a value must never be recomputed, you can lazily initialize a ref.)\n * {@link https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily ReactDocs}\n * @param {function(): *} initializer - the callback function that will only be ran once\n * @returns {*} - a lazily loaded value\n * */\nexport const useLazyMemo = (initializer) => {\n  const ref = useRef(DEFAULT_VALUE)\n\n  const getObservable = () => {\n    const observer = ref.current\n    if (observer !== DEFAULT_VALUE) {\n      return observer\n    }\n\n    const newObserver = initializer()\n    ref.current = newObserver\n    return newObserver\n  }\n\n  return getObservable()\n}\n\nexport default useLazyMemo\n","import { useReducer, useRef, useCallback, useEffect } from 'react'\nimport {\n  isFunction,\n  getDerivedStateFromProps,\n  defaultReducer,\n  defaultInitializer\n} from '../utils'\nimport useLazyMemo from './useLazyMemo'\n\n/**\n * Mimics React.Component this.setState\n * @param {ReducerState} prevState - the reducer's previous state\n * @param {ReducerState} nextState - the state to overwrite\n * @returns {ReducerState} - the next state for the reducer\n */\nconst setStateHookReducer = defaultReducer\n\n/**\n * Augments React's useReducer() hook so that the action dispatcher supports thunks.\n * @param {Reducer} reducer - reducer\n * @param {ReducerState=} initialState - initialState\n * @param {ReducerStateInitializer=} initializer - initilizes the reducer's state\n * @param {ComponentProps=} props - props to make the state controlled from a HOC\n * @returns {Array.<ReducerState, Thunk>} - the new useReducer hook\n */\nconst useReducerWithThunk = (\n  reducer,\n  initialState,\n  initializer = defaultInitializer,\n  props\n) => {\n  // Get initial hook state once\n  const getInitialHookState = useCallback(\n    () => getDerivedStateFromProps(initialState, props),\n    []\n  )\n  const initialHookState = useLazyMemo(getInitialHookState)\n\n  const [hookState, setHookState] = useReducer(\n    setStateHookReducer,\n    initialHookState,\n    initializer\n  )\n\n  // State management\n  const state = useRef(hookState)\n\n  const getState = useCallback(() => state.current, [state])\n\n  const setState = useCallback(\n    (newState) => {\n      const nextState = getDerivedStateFromProps(newState, props)\n      state.current = nextState\n      setHookState(nextState)\n    },\n    [props, setHookState]\n  )\n\n  // Reducer\n  const reduce = useCallback((action) => reducer(getState(), action), [\n    reducer,\n    getState\n  ])\n\n  /** Augmented dispatcher\n   * @param {Action|ThunkActionDispatch} action - action\n   * @returns {Thunk} - the new dispatch API\n   */\n  const dispatch = useCallback(\n    (action) => {\n      if (isFunction(action)) {\n        return action(dispatch, getState)\n      }\n      return setState(reduce(action))\n    },\n    [getState, setState, reduce]\n  )\n\n  useEffect(() => {\n    if (state.current) {\n      state.current = getDerivedStateFromProps(state.current, props)\n      setHookState(props)\n    }\n  }, [props])\n\n  return [hookState, dispatch]\n}\n\nexport default useReducerWithThunk\n","import React, {\n  createContext,\n  useCallback,\n  useRef,\n  useLayoutEffect,\n  useMemo\n} from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  combineReducers,\n  shallowEquals,\n  defaultInitializer,\n  defaultReducer,\n  getRandomInt\n} from './utils'\nimport useLazyMemo from './hooks/useLazyMemo'\nimport useReducerWithThunk from './hooks/useReducerWithThunk'\nimport './types'\n\nconst inDevelopmentMode = process.env.NODE_ENV === 'development';\n\nconst storeFactory = () => ({\n  isReady: false,\n  dispatch: () => {\n    throw Error('Store is NOT ready!');\n  },\n  getState: () => {\n    throw Error('Store is NOT ready!')\n  }\n})\n// Use this only if you want to use a global reducer for your whole app\nconst store = storeFactory();\n\nconst StateProvider = createContext(null);\n\n/**\n * Context Store Factory that simulates Redux's createStore API\n * @param {ContexStoreProps} props - ContextStore props\n * @returns {React.ContextProvider} - a React Context with the store as it's value\n */\nconst ContextStore = ({\n  name,\n  context: Context,\n  reducers,\n  initialState,\n  props,\n  initializer,\n  children\n}) => {\n  // call the function once to get initial state and global reducer\n  const getInitialMainState = useCallback(\n    () => combineReducers(reducers, initialState),\n    []\n  )\n  const [mainState, mainReducer] = useLazyMemo(getInitialMainState)\n\n  // setup useReducer with the returned values of the combineReducers\n  const [state, dispatch] = useReducerWithThunk(\n    mainReducer,\n    mainState,\n    initializer,\n    props\n  )\n\n  // Update store object to potentially access it outside of a component\n  useLayoutEffect(() => {\n    if (!store.isReady) {\n      store.isReady = true;\n      store.dispatch = dispatch;\n      store.getState = () => state;\n      // Object.freeze(store) // don't freeze the object, or store.isReady can't be re-assigned\n    }\n    return () => {\n      store.isReady = false;\n    };\n  }, [state, dispatch]);\n\n  // make the context object value\n  const contextStore = useMemo(\n    () => ({\n      state,\n      dispatch\n    }),\n    [state, dispatch]\n  )\n\n  const warnedAboutMissingDevToolRef = useRef(false);\n\n  useLayoutEffect(() => {\n    if (\n      typeof window !== 'undefined'\n      // eslint-disable-next-line\n      && window._REACT_CONTEXT_DEVTOOL &&\n      inDevelopmentMode\n    ) {\n      // eslint-disable-next-line\n      window._REACT_CONTEXT_DEVTOOL({\n        id: name,\n        displayName: name,\n        values: contextStore\n      })\n    } else if (!warnedAboutMissingDevToolRef.current && inDevelopmentMode) {\n      warnedAboutMissingDevToolRef.current = true;\n      // eslint-disable-next-line\n      console.info(\n        '%cConsider installing \"React Context DevTool\" in order to inspect the Wisteria state',\n        'color:#1dbf73'\n      )\n    }\n  }, [contextStore]);\n\n  return <Context.Provider value={contextStore}>{children}</Context.Provider>;\n};\n\nContextStore.propTypes = {\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  context: PropTypes.shape({}),\n  reducers: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.objectOf(PropTypes.func)\n  ]),\n  initialState: PropTypes.shape({}),\n  props: PropTypes.shape({}),\n  initializer: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.symbol,\n    PropTypes.object,\n    PropTypes.elementType,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.arrayOf(PropTypes.func),\n    PropTypes.arrayOf(PropTypes.symbol),\n    PropTypes.arrayOf(PropTypes.object),\n    PropTypes.arrayOf(PropTypes.elementType)\n  ]).isRequired\n}\n\nContextStore.defaultProps = {\n  name: getRandomInt(0, 1000),\n  context: StateProvider,\n  reducers: defaultReducer,\n  initializer: defaultInitializer,\n  initialState: undefined,\n  props: undefined\n}\n\nconst MemoizedContextProvider = React.memo(ContextStore, shallowEquals);\n\nexport {\n  StateProvider as ContextConsumer,\n  ContextStore as ContextProvider,\n  MemoizedContextProvider,\n  store\n}\n","import isFunction from './isFunction'\n/**\n * This function returns one reducer if it is a Function\n * otherwise, it combines an object of reducer functions\n * @param {Reducer|Object.<string, Reducer>} reducers - reducer(s) to combine\n * @param {ReducerState} initialState - the initial state of the reducer\n * @returns {Array.<ReducerState, Reducer|CombinedReducers>} - an array of\n * [globalState, globalReducer]\n * */\nconst combineReducers = (reducers, initialState) => {\n  // If a single reducer return\n  if (isFunction(reducers)) {\n    return [initialState || {}, reducers]\n  }\n\n  /**\n   * Global reducer function; this is passed to the useReducer hook\n   * @param {ReducerState} state - reducer state\n   * @param {ReducerAction} action - action\n   * @returns {Array.<ReducerState, Reducer|CombinedReducers>} - combined reducers\n   */\n  const globalReducerFunction = (state, action) => {\n    let hasStateChanged = false\n    const updatedStateByReducers = {}\n\n    /**\n     * this is where dispatching happens;\n     * the action is passed to all reducers one by one.\n     * we iterate and pass the action to each reducer and this would return new\n     * state if applicable.\n     */\n    for (let i = 0; i < reducers.length; i++) {\n      const reducerKey = reducers[i]\n      if (Object.prototype.hasOwnProperty.call(reducers, reducerKey)) {\n        const currentStateByKey = state[reducerKey]\n        const currentReducer = reducers[reducerKey]\n\n        const returnedStateByReducer = currentReducer(currentStateByKey, action)\n\n        const areStateByKeyEqual = returnedStateByReducer !== currentStateByKey\n\n        hasStateChanged = hasStateChanged || areStateByKeyEqual\n\n        updatedStateByReducers[reducerKey] = returnedStateByReducer\n      }\n    }\n    return hasStateChanged ? updatedStateByReducers : state\n  }\n  let combinedStateAndReducers\n\n  if (initialState) {\n    combinedStateAndReducers = [initialState, globalReducerFunction]\n  } else {\n    // set default state returned by reducer and its reducer\n    const globalState = Object.entries(reducers).reduce(\n      (acc, [key, reducer]) => {\n        if (isFunction(reducer)) {\n          acc[key] = reducer(undefined, {\n            type: '__@@PLACEHOLDER_ACTION__'\n          })\n        } else {\n          throw new Error(`${reducer} is not a function`)\n        }\n        return acc\n      },\n      {}\n    )\n    combinedStateAndReducers = [globalState, globalReducerFunction]\n  }\n\n  return combinedStateAndReducers\n}\n\nexport default combineReducers\n","import React, { memo, useCallback, useContext, useMemo } from 'react'\nimport { isFunction, bindActionCreators, shallowEquals } from './utils'\nimport { usePreviousValue } from './hooks'\nimport { ContextConsumer } from './provider'\nimport './types'\n\n/**\n * This function simulates Redux's connect API\n * @param {MapStateToProps} mapStateToProps - reducer dispatch API\n * @param {MapDispatchToProps} mapDispatchToProps - reducer state\n * @param {Function=} mergeProps - function to merge props\n * @param {ConnectOptions=} options - options\n * @returns {React.memo|React.FunctionComponent} - a connected component\n * */\n\nconst connect = (mapStateToProps, mapDispatchToProps, mergeProps, options) => (\n  Component\n) => {\n  const {\n    context = ContextConsumer,\n    pure = true,\n    // TODO:\n    // areStatesEqual = shallowEquals,\n    // areOwnPropsEqual = shallowEquals,\n    areStatePropsEqual = shallowEquals,\n    areMergedPropsEqual = shallowEquals\n    // forwardRef = false,\n  } = options || {}\n  // Conditionally memoize Component\n  const MemoizedComponent =\n    pure === true ? memo(Component, areStatePropsEqual) : Component\n  return (ownProps) => {\n    const { state, dispatch } = useContext(context)\n\n    const stateToProps = useMemo(() => {\n      if (isFunction(mapStateToProps)) {\n        return mapStateToProps(state, ownProps)\n      }\n      return {}\n    }, [state, ownProps])\n\n    const dispatchToProps = useMemo(() => {\n      if (!mapDispatchToProps) {\n        return {}\n      }\n      if (isFunction(mapDispatchToProps)) {\n        return mapDispatchToProps(dispatch)\n      }\n      return bindActionCreators(mapDispatchToProps, dispatch)\n    }, [dispatch])\n\n    const prevMergeProps = usePreviousValue(mergeProps)\n\n    const handleMergeProps = useCallback(\n      (stateProps, dispatchProps, props) => {\n        const getMergedProps = (merge) =>\n          isFunction(merge)\n            ? merge(stateProps, dispatchProps, props)\n            : { ...props, ...stateProps, ...dispatchProps }\n\n        const nextMergedProps = getMergedProps(mergeProps)\n\n        if (\n          !pure ||\n          (prevMergeProps &&\n            !areMergedPropsEqual(nextMergedProps, prevMergeProps))\n        ) {\n          return nextMergedProps\n        }\n\n        return getMergedProps(prevMergeProps)\n      },\n      [prevMergeProps]\n    )\n\n    const mergedProps = useMemo(\n      () => handleMergeProps(stateToProps, dispatchToProps, ownProps),\n      [ownProps, handleMergeProps, stateToProps, dispatchToProps]\n    )\n\n    return <MemoizedComponent {...mergedProps} dispatch={dispatch} />\n  }\n}\n\nexport default connect\n","import { useEffect, useRef } from 'react'\n\n/**\n * On each render returns the previous value of the given variable/constant\n * @param {*} value - any value\n * @returns {*} any previous value\n */\nconst usePreviousValue = (value) => {\n  const prevValue = useRef(value)\n\n  useEffect(() => {\n    prevValue.current = value\n\n    return () => {\n      prevValue.current = undefined\n    }\n  })\n\n  return prevValue.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport { connect } from 'resurrection'\n\nconst SomeProviderChild = ({ someKeyFromMyStore }) => (\n  <div>{someKeyFromMyStore}</div>\n)\n\nconst mapStateToProps = ({ someKeyFromMyStore }) => ({ someKeyFromMyStore })\n\nexport default connect(mapStateToProps)(SomeProviderChild)\n","import React from 'react'\nimport { ContextProvider } from 'resurrection'\nimport SomeProviderChild from './SomeProviderChild'\n\nconst DEFAULT_STATE = {\n  someKeyFromMyStore: 'Hello World'\n}\n\nconst someReducer = (state = DEFAULT_STATE, action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case 'SOME_ACTION_TYPE':\n      return { ...state, someKeyFromMyStore: payload }\n\n    default:\n      return state\n  }\n}\n\nconst SomeProvider = () => (\n  /* reducers can be a single reducer function or an object of reducers */\n  /* object of reducers example: const reducers = { someReducer, someOtherReducer} */\n  <ContextProvider reducers={someReducer}>\n    <SomeProviderChild />\n  </ContextProvider>\n)\n\nexport default SomeProvider\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}